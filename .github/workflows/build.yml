name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        enable_ui: [on]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Set up ccache (Linux only)
      if: startsWith(matrix.os, 'linux')
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ matrix.os }}-${{ matrix.enable_ui }}

    - name: Set up Ninja Build System
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Set up MSVC Developer Command Prompt (Windows only)
      if: startsWith(matrix.os, 'windows')
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Dependencies (Linux only)
      if: startsWith(matrix.os, 'linux')
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          libx11-dev libxcursor-dev libxi-dev

    - name: Generate Makefiles
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          export enable_ccache=off
        else
          export enable_ccache=on
        fi

        curl -L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --output skia.zip
        7z x skia.zip

        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DENABLE_UI=${{ matrix.enable_ui }} \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=skia \
          -DSKIA_DIR=./skia \
          -DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \
          -DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib

    - name: Compile the Project
      shell: bash
      run: |
        cd build && ninja

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: aseprite
        path: |
          D:/a/aseprite/aseprite/build/bin/data
          D:/a/aseprite/aseprite/build/bin/aseprite.exe
